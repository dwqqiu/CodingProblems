// https://leetcode.com/problems/fibonacci-number/

// 0 1 1 2 3 5 8 13 ..
// 0 1 = 1
// 1 1 = 2
// 1 2 = 3
// 2 3 = 5
// 3 5 = 8
// 5 8 = 13

// Without Memoization
class Solution {
    public int fib(int n) {
        if (n == 0) return 0;
        if (n == 1) return 1;
        return fib(n-1) + fib(n-2);
    }
}

// With Memoization
class Solution {
    public int fib(int n) {
        int[] memo = new int[n+1];
        return fib_mod(n, memo);
    }

    public int fib_mod(int n, int[] memo) {
        if (n == 0) return 0;
        if (n == 1) return 1;
        if (memo[n] > 0) return memo[n];
        memo[n] = fib_mod(n-1, memo) + fib_mod(n-2, memo);
        return memo[n];
    }
}